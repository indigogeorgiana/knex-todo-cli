#!/usr/bin/env node
const knex = require('knex')

const config = require('./knexfile').development
const devDb = require('knex')(config)

const cmd = process.argv[2]
const note = process.argv[3]

switch (cmd) {
  case 'list':
    getAll()
      .then(listTodos)
      // .catch(logError)
      // .finally(closeDB)
    break

  case 'done' :
    deleteTask(note)
      .then(() => getAll())
      .then(listTodos)
      .catch(logError)
      .finally(closeDB)
    break

  case 'update':
    updateTask(note)
      .then(() => getAll())
      .then(listTodos)
      .catch(logError)
      .finally(closeDB)
    break

  default:
    console.log('No matched cases')
    closeDB()
    break
}

function updateTask (id, task) {
  const db = devDb
  return db('todos')
    .where('id', id)
    .update({task: task})
}

function listTodos (todos) {
  todos.forEach(t => {
    console.info(`${t.id}: ${t.task}`)
  })
  devDb.destroy()
}

function logError (err) {
  console.error('Uh oh!', err)
}

function getAll (testDb) {
  const db = testDb || devDb
  return db('todos').select()
}

function closeDB (testDb) {
  const db = testDb || devDb
  db.destroy()
}

function deleteTask (id) {
  // returns a promise that can delete a row given its id
  const db = devDb
  return db('todos')
    .where('id', id)
    .del()
}

//   return db('todos')
//         .del()
//         .where('id'.id)

// }

// //update task by id
// function updateList (id, task, db) {
//   return db('todos')
//     .where('id'.id)
//     .update({task: task})
// }
