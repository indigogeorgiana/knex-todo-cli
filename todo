#!/usr/bin/env node

const config = require('./knexfile').development
const devDb = require('knex')(config)

const cmd = process.argv[2]
const note = process.argv[3]
const task = process.argv[4]

// console.log(note)

switch (cmd) {
  case 'list':
    getAll()
      .then(listTodos)
      .catch(logError)
      .finally(closeDB)
    break

  case 'done':
    getAll()
      .then(delById)
      .catch(logError)
      .finally(closeDB)
    break

  case 'insert':
    getAll()
      .then(insertData)
      .catch(logError)
      .finally(closeDB)
    break

  case 'updateTask':
    getAll()
      .then(updateTask)
      .catch(logError)
      .finally(closeDB)
    break

  case 'search':
    getAll()
      .then(search)
      .then(showSearch)
      .catch(logError)
      .finally(closeDB)
    break

  case 'complete':
    getAll()
      .then(complete)
      .catch(logError)
      .finally(closeDB)
    break

  case 'completed':
    getAll()
      .then(completedOnly)
      .then(listTodos)
      .catch(logError)
      .finally(closeDB)
    break

  default:
    console.log('No matched cases')
    closeDB()
    break
}

function listTodos (todos) {
  todos.forEach(function (todo) {
    console.info(todo.id + ': ' + todo.task + ' ' + todo.completed)
  })
}

function logError (err) {
  console.error('Uh oh!', err)
}

function getAll (testDb) {
  const db = testDb || devDb
  return db('todos').select()
}

function delById (todos) {
  return devDb('todos').where('id', note).del()
}

function insertData (todos) {
  return devDb('todos').insert([
    {id: 1, task: 'eat breakfast'},
    {id: 2, task: 'brush teeth'},
    {id: 3, task: 'have a shower'}
  ])
}

function updateTask (todos) {
  return devDb('todos').where('id', note).update('task', task)
}

function search (todos) {
  const x = devDb.select('task').from('todos').where('task', 'like', '%' + note + '%')
  return x
}

function showSearch (x) {
  console.log(x)
}

function complete (todos) { // user enters ./todo complete 1 and functions adds 'Y' to completed column
  return devDb('todos').where('id', note).update('completed', 'Y')
}

function completedOnly (todos) {
  return devDb.select('id', 'task', 'completed').from('todos').where('completed', 'Y')
}

function closeDB (testDb) {
  const db = testDb || devDb
  db.destroy()
}
